# 4.2 Написать программу, которая генерирует двумерный массив на A x B элементов
# (A и B вводим с клавиатуры). И считаем среднее арифметическое каждой строки
# (не пользуемся встроенными методами подсчета суммы)

# Алгоритм
# 1. Ввести количество строк (row) и столбцов (col) двумерного массива (матрицы),
# значения больше 1
# 2. Создать пустой список, добавить row пустых элементов - списков
# 3. В каждый созданный подсписок добавить col элементов, сгенерированных
# случайным способом
# 4. Создать пустой список для хранения значений среднего арифметического (AVG) строк
# полученной матрицы
# 5. Посчитать построчно сумму элементов, полученное значение разделить на
# количество этих элементов (col). Записать результат для каждой строки в список,
# созданный в пункте 4, округлив до двух знаков после запятой
# 6. Вывести каждую подстроку матрицы с новой строки, в конце каждой подстроки
# отобразить значение среднего арифметического входящих в нее элементов

from random import randint

row, col = 0, 0
while row < 1 or col < 1:
    row = int(input('Введите количество строк двумерного массива (не менее 1): '))
    col = int(input('Введите количество столбцов двумерного массива (не менее 1): '))
    if row < 1 or col < 1:
        print('Некорректные данные, повторите ввод')
    print()

matrix = []
for i in range(row):
    matrix.append([])
    for k in range(col):
        matrix[i].append(randint(0, 9))

average_row = []
for i in range(row):
    sum_row = 0
    for k in range(col):
        sum_row += matrix[i][k]
    average_row.append(round(sum_row / col, 2))

print(f'Полученная матрица {row}*{col} и значение среднего арифметического '
      f'каждой строки (AVG)')
for i in range(row):
    print('[ ', end='')
    for k in range(col):
        print(matrix[i][k], end=' ')
    print(f']  AVG = {average_row[i]}')
